[package]
name = "op-dbus"
version = "0.1.0"
edition = "2021"
authors = ["GhostBridge Team"]
description = "Operation D-Bus - Declarative system state management via native protocols"
license = "MIT"

[dependencies]
# Async runtime
tokio = { version = "1", features = ["rt-multi-thread", "macros", "fs", "time", "signal"] }
futures = "0.3"

# Serialization
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# D-Bus
zbus = { version = " =3.14.1", features = ["tokio"] }

# MCP dependencies
uuid = { version = "1.6", features = ["v4"], optional = true }
toml = { version = "0.8", optional = true }

# Netlink (native kernel networking)
rtnetlink = { version = "0.13.1", features = ["tokio_socket"] }
nix = { version = "0.26", features = ["user"] }
netlink-packet-route = "0.19"

# CLI
clap = { version = "4", features = ["derive"] }

# Error handling
anyhow = "1"
thiserror = "1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
log = "0.4"
env_logger = "0.10"

# Async utilities
async-trait = "0.1"
once_cell = "1.19"

# Web server (optional)
axum = { version = "0.7", features = ["ws"], optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.5", features = ["fs", "cors", "trace"], optional = true }
mime_guess = { version = "2.0", optional = true }

# Hashing & crypto
sha2 = "0.10"
md5 = "0.7"
aes-gcm = "0.10"
argon2 = "0.5"
rand = "0.8"

# Time
chrono = { version = "0.4", default-features = false, features = ["clock", "serde"] }

# Caching
rusqlite = { version = "0.32", features = ["bundled"] }
bincode = "1.3"

# System info
gethostname = "0.5"
num_cpus = "1.16"
base64ct = "=1.7.3"
base64 = "0.22"

# ML/Transformers (optional, for advanced vectorization)
ort = { version = "2.0.0-rc.10", optional = true, features = ["download-binaries"] }
tokenizers = { version = "0.20", optional = true }
ndarray = { version = "0.16", optional = true }
hf-hub = { version = "0.3", optional = true, features = ["tokio"] }
indicatif = { version = "0.17", optional = true }

[features]
default = ["web"]
# Enable transformer-based vectorization components
ml = ["ort", "tokenizers", "ndarray", "hf-hub", "indicatif"]
# Enable web UI server
web = ["axum", "tower", "tower-http", "mime_guess"]
# Enable MCP (Model Context Protocol) features
mcp = ["uuid", "toml", "axum", "tower", "tower-http"]
# Minimal build that disables network DBus/system clients requiring OpenSSL
minimal = []

[[bin]]
name = "op-dbus"
path = "src/main.rs"

# MCP binaries
[[bin]]
name = "dbus-mcp"
path = "src/mcp/main.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-orchestrator"
path = "src/mcp/orchestrator.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-mcp-web"
path = "src/mcp/web_main.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-agent-executor"
path = "src/mcp/agents/executor.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-agent-systemd"
path = "src/mcp/agents/systemd.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-agent-file"
path = "src/mcp/agents/file.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-agent-monitor"
path = "src/mcp/agents/monitor.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-agent-network"
path = "src/mcp/agents/network.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-mcp-discovery"
path = "src/mcp/discovery.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-mcp-discovery-enhanced"
path = "src/mcp/discovery_enhanced.rs"
required-features = ["mcp"]

[[bin]]
name = "introspection-parser"
path = "src/mcp/introspection_parser.rs"
required-features = ["mcp"]

[[bin]]
name = "dbus-mcp-bridge"
path = "src/mcp/bridge.rs"
required-features = ["mcp"]

[[bin]]
name = "mcp-chat"
path = "src/mcp/chat_main.rs"
required-features = ["mcp"]


